# Copyright (C) 1997-2019, 2020 Free Software Foundation, Inc.
#
# This file is part of DejaGnu. For ARC target simulation.
#
# DejaGnu is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# DejaGnu is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DejaGnu; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

# Load the generic configuration for this board. This will define a basic
# set of routines used to communicate with the board.
load_generic_config "sim"

# basic-sim.exp is a basic description for the standard Cygnus simulator.
load_base_board_description "basic-sim"

# This tells it which directory to look in for the simulator.
setup_sim arc

# No multilib flags are set by default.
process_multilib_options ""

# Select the right spec file
set xldflags ""
case "$target_triplet" in {
    { arc*-*elf* } {
	set xldflags "--specs=nsim.specs -Wl,--defsym=__DEFAULT_HEAP_SIZE=256m \
	    -Wl,--defsym=__DEFAULT_STACK_SIZE=1024m"
    }
}

# The compiler used to build for this board. This has *nothing* to do
# with what compiler is tested if we're testing gcc.
set_board_info compiler "[find_gcc]"

# The basic set of flags needed to build "hello world" for this
# board. This board uses libgloss and newlib.
set_board_info cflags	"[libgloss_include_flags] [newlib_include_flags]"
set_board_info ldflags	"[libgloss_link_flags] $xldflags [newlib_link_flags]"

# This board doesn't use a linker script.
set_board_info ldscript ""

# And, it can't do arguments, and doesn't have real signals.

set_board_info noargs 1
set_board_info gdb,nosignals 1
set_board_info sim_time_limit 300

# Provides options to the simulator's execution call.
if {[info exists ::env(DEJAGNU_SIM_OPTIONS)]} {
    set_board_info sim,options "$env(DEJAGNU_SIM_OPTIONS)"
}

# skip gdb.reverse
set_board_info gdb,can_reverse 0
set_board_info gdb,use_precord 0

# Setup the timeout
set_board_info gcc,timeout 600

set_board_info needs_status_wrapper 1
